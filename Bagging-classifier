{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":420,"sourceType":"datasetVersion","datasetId":19}],"dockerImageVersionId":31089,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/vivekkk007/bagging-classifier?scriptVersionId=262243501\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","source":"üåü What is Bagging?\n\nBagging (Bootstrap Aggregating) is an ensemble learning technique that improves the performance and stability of machine learning models by combining predictions from multiple models.\n\nIt reduces variance (overfitting) by averaging multiple weak learners.\n\nEach model is trained on a different random subset of the data (with replacement ‚Üí bootstrap      samples).\n\nFinal prediction is made by majority voting (for classification) or averaging (for regression).\n\n‚öôÔ∏è How Bagging Works\n\nBootstrap Sampling\nFrom the training dataset, multiple new datasets are created by sampling with replacement.\nExample: If you have 1000 samples, each new dataset also has 1000 samples, but with some repeats.\n\nTrain Base Learners\nEach dataset is used to train a base model (commonly Decision Trees).\n\nAggregate Predictions\n\nFor classification ‚Üí use majority vote.\n\nFor regression ‚Üí use average of predictions\n\nüìå Key Parameters\n\nbase_estimator ‚Üí model used (default = DecisionTreeClassifier).\n\nn_estimators ‚Üí number of learners.\n\nmax_samples ‚Üí % of training samples per learner.\n\nbootstrap ‚Üí if True, sampling with replacement.\n\nbootstrap_features ‚Üí if True, features are sampled with replacement.\n\n‚úÖ Advantages\n\nReduces overfitting.\n\nWorks well with unstable models (e.g., decision trees).\n\nImproves accuracy.\n\n‚ùå Disadvantages\n\nComputationally expensive (many models).\n\nDoesn‚Äôt reduce bias (only variance).\n\nüëâ Example: Random Forest is a special case of Bagging where the base learners are decision trees, and additional randomness is introduced by sampling features.","metadata":{}},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-09-16T19:53:01.002502Z","iopub.execute_input":"2025-09-16T19:53:01.002849Z","iopub.status.idle":"2025-09-16T19:53:01.373952Z","shell.execute_reply.started":"2025-09-16T19:53:01.002825Z","shell.execute_reply":"2025-09-16T19:53:01.373047Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/iris/Iris.csv\n/kaggle/input/iris/database.sqlite\n","output_type":"stream"}],"execution_count":2},{"cell_type":"code","source":"df = pd.read_csv('/kaggle/input/iris/Iris.csv')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T19:53:21.154456Z","iopub.execute_input":"2025-09-16T19:53:21.154955Z","iopub.status.idle":"2025-09-16T19:53:21.179733Z","shell.execute_reply.started":"2025-09-16T19:53:21.154927Z","shell.execute_reply":"2025-09-16T19:53:21.178659Z"}},"outputs":[],"execution_count":3},{"cell_type":"code","source":"df.head()\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T19:53:42.840035Z","iopub.execute_input":"2025-09-16T19:53:42.84033Z","iopub.status.idle":"2025-09-16T19:53:42.863226Z","shell.execute_reply.started":"2025-09-16T19:53:42.840308Z","shell.execute_reply":"2025-09-16T19:53:42.862279Z"}},"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"   Id  SepalLengthCm  SepalWidthCm  PetalLengthCm  PetalWidthCm      Species\n0   1            5.1           3.5            1.4           0.2  Iris-setosa\n1   2            4.9           3.0            1.4           0.2  Iris-setosa\n2   3            4.7           3.2            1.3           0.2  Iris-setosa\n3   4            4.6           3.1            1.5           0.2  Iris-setosa\n4   5            5.0           3.6            1.4           0.2  Iris-setosa","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>SepalLengthCm</th>\n      <th>SepalWidthCm</th>\n      <th>PetalLengthCm</th>\n      <th>PetalWidthCm</th>\n      <th>Species</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>5.1</td>\n      <td>3.5</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>4.9</td>\n      <td>3.0</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>4.7</td>\n      <td>3.2</td>\n      <td>1.3</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>4.6</td>\n      <td>3.1</td>\n      <td>1.5</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>5.0</td>\n      <td>3.6</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":5},{"cell_type":"code","source":"df = df.iloc[:,1:]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T19:54:27.722077Z","iopub.execute_input":"2025-09-16T19:54:27.722412Z","iopub.status.idle":"2025-09-16T19:54:27.727683Z","shell.execute_reply.started":"2025-09-16T19:54:27.722385Z","shell.execute_reply":"2025-09-16T19:54:27.726789Z"}},"outputs":[],"execution_count":7},{"cell_type":"code","source":"df.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T19:54:43.781309Z","iopub.execute_input":"2025-09-16T19:54:43.781671Z","iopub.status.idle":"2025-09-16T19:54:43.792863Z","shell.execute_reply.started":"2025-09-16T19:54:43.781607Z","shell.execute_reply":"2025-09-16T19:54:43.791675Z"}},"outputs":[{"execution_count":8,"output_type":"execute_result","data":{"text/plain":"   SepalWidthCm  PetalLengthCm  PetalWidthCm      Species\n0           3.5            1.4           0.2  Iris-setosa\n1           3.0            1.4           0.2  Iris-setosa\n2           3.2            1.3           0.2  Iris-setosa\n3           3.1            1.5           0.2  Iris-setosa\n4           3.6            1.4           0.2  Iris-setosa","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>SepalWidthCm</th>\n      <th>PetalLengthCm</th>\n      <th>PetalWidthCm</th>\n      <th>Species</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>3.5</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>3.0</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3.2</td>\n      <td>1.3</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3.1</td>\n      <td>1.5</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>3.6</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":8},{"cell_type":"code","source":"from sklearn.preprocessing import LabelEncoder","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T19:54:59.875782Z","iopub.execute_input":"2025-09-16T19:54:59.876089Z","iopub.status.idle":"2025-09-16T19:55:00.592422Z","shell.execute_reply.started":"2025-09-16T19:54:59.876064Z","shell.execute_reply":"2025-09-16T19:55:00.591378Z"}},"outputs":[],"execution_count":9},{"cell_type":"code","source":"encoder = LabelEncoder()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T19:55:37.575349Z","iopub.execute_input":"2025-09-16T19:55:37.576241Z","iopub.status.idle":"2025-09-16T19:55:37.580503Z","shell.execute_reply.started":"2025-09-16T19:55:37.57621Z","shell.execute_reply":"2025-09-16T19:55:37.579426Z"}},"outputs":[],"execution_count":14},{"cell_type":"code","source":"df['Species'] = encoder.fit_transform(df['Species'])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T19:55:41.112709Z","iopub.execute_input":"2025-09-16T19:55:41.113026Z","iopub.status.idle":"2025-09-16T19:55:41.118704Z","shell.execute_reply.started":"2025-09-16T19:55:41.113002Z","shell.execute_reply":"2025-09-16T19:55:41.117542Z"}},"outputs":[],"execution_count":16},{"cell_type":"code","source":"df.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T19:55:53.753047Z","iopub.execute_input":"2025-09-16T19:55:53.753346Z","iopub.status.idle":"2025-09-16T19:55:53.765009Z","shell.execute_reply.started":"2025-09-16T19:55:53.753324Z","shell.execute_reply":"2025-09-16T19:55:53.764014Z"}},"outputs":[{"execution_count":17,"output_type":"execute_result","data":{"text/plain":"   SepalWidthCm  PetalLengthCm  PetalWidthCm  Species\n0           3.5            1.4           0.2        0\n1           3.0            1.4           0.2        0\n2           3.2            1.3           0.2        0\n3           3.1            1.5           0.2        0\n4           3.6            1.4           0.2        0","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>SepalWidthCm</th>\n      <th>PetalLengthCm</th>\n      <th>PetalWidthCm</th>\n      <th>Species</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>3.5</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>3.0</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3.2</td>\n      <td>1.3</td>\n      <td>0.2</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3.1</td>\n      <td>1.5</td>\n      <td>0.2</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>3.6</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":17},{"cell_type":"code","source":"df = df[df['Species'] != 0][['SepalWidthCm','PetalLengthCm','Species']]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T19:56:07.97277Z","iopub.execute_input":"2025-09-16T19:56:07.973072Z","iopub.status.idle":"2025-09-16T19:56:07.981484Z","shell.execute_reply.started":"2025-09-16T19:56:07.973049Z","shell.execute_reply":"2025-09-16T19:56:07.980187Z"}},"outputs":[],"execution_count":18},{"cell_type":"code","source":"df.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T19:56:34.733372Z","iopub.execute_input":"2025-09-16T19:56:34.733732Z","iopub.status.idle":"2025-09-16T19:56:34.744273Z","shell.execute_reply.started":"2025-09-16T19:56:34.733706Z","shell.execute_reply":"2025-09-16T19:56:34.743352Z"}},"outputs":[{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"    SepalWidthCm  PetalLengthCm  Species\n50           3.2            4.7        1\n51           3.2            4.5        1\n52           3.1            4.9        1\n53           2.3            4.0        1\n54           2.8            4.6        1","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>SepalWidthCm</th>\n      <th>PetalLengthCm</th>\n      <th>Species</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>50</th>\n      <td>3.2</td>\n      <td>4.7</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>51</th>\n      <td>3.2</td>\n      <td>4.5</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>52</th>\n      <td>3.1</td>\n      <td>4.9</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>53</th>\n      <td>2.3</td>\n      <td>4.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>54</th>\n      <td>2.8</td>\n      <td>4.6</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":19},{"cell_type":"code","source":"import seaborn as sns\nimport matplotlib.pyplot as plt","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T20:00:35.734265Z","iopub.execute_input":"2025-09-16T20:00:35.734695Z","iopub.status.idle":"2025-09-16T20:00:35.739019Z","shell.execute_reply.started":"2025-09-16T20:00:35.73467Z","shell.execute_reply":"2025-09-16T20:00:35.738096Z"}},"outputs":[],"execution_count":23},{"cell_type":"code","source":"plt.scatter(df['SepalWidthCm'],df['PetalLengthCm'],c=df['Species'],cmap='winter')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T20:00:47.445241Z","iopub.execute_input":"2025-09-16T20:00:47.445595Z","iopub.status.idle":"2025-09-16T20:00:47.853647Z","shell.execute_reply.started":"2025-09-16T20:00:47.445571Z","shell.execute_reply":"2025-09-16T20:00:47.852485Z"}},"outputs":[{"execution_count":24,"output_type":"execute_result","data":{"text/plain":"<matplotlib.collections.PathCollection at 0x78dc651fef10>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":24},{"cell_type":"code","source":"df_train = df.iloc[:60,:].sample(10)\ndf_train","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T20:01:03.853897Z","iopub.execute_input":"2025-09-16T20:01:03.854231Z","iopub.status.idle":"2025-09-16T20:01:03.866422Z","shell.execute_reply.started":"2025-09-16T20:01:03.854207Z","shell.execute_reply":"2025-09-16T20:01:03.865548Z"}},"outputs":[{"execution_count":25,"output_type":"execute_result","data":{"text/plain":"     SepalWidthCm  PetalLengthCm  Species\n94            2.7            4.2        1\n101           2.7            5.1        2\n88            3.0            4.1        1\n104           3.0            5.8        2\n91            3.0            4.6        1\n64            2.9            3.6        1\n50            3.2            4.7        1\n81            2.4            3.7        1\n97            2.9            4.3        1\n66            3.0            4.5        1","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>SepalWidthCm</th>\n      <th>PetalLengthCm</th>\n      <th>Species</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>94</th>\n      <td>2.7</td>\n      <td>4.2</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>101</th>\n      <td>2.7</td>\n      <td>5.1</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>88</th>\n      <td>3.0</td>\n      <td>4.1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>104</th>\n      <td>3.0</td>\n      <td>5.8</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>91</th>\n      <td>3.0</td>\n      <td>4.6</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>64</th>\n      <td>2.9</td>\n      <td>3.6</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>50</th>\n      <td>3.2</td>\n      <td>4.7</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>81</th>\n      <td>2.4</td>\n      <td>3.7</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>97</th>\n      <td>2.9</td>\n      <td>4.3</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>66</th>\n      <td>3.0</td>\n      <td>4.5</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":25},{"cell_type":"code","source":"df = df.sample(100)\ndf_train = df.iloc[:60,:].sample(10)\ndf_val = df.iloc[60:80,:].sample(5)\ndf_test = df.iloc[80:,:].sample(5)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T20:03:12.446597Z","iopub.execute_input":"2025-09-16T20:03:12.446989Z","iopub.status.idle":"2025-09-16T20:03:12.455947Z","shell.execute_reply.started":"2025-09-16T20:03:12.446963Z","shell.execute_reply":"2025-09-16T20:03:12.45479Z"}},"outputs":[],"execution_count":27},{"cell_type":"code","source":"df_train","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T20:03:24.338339Z","iopub.execute_input":"2025-09-16T20:03:24.340146Z","iopub.status.idle":"2025-09-16T20:03:24.35528Z","shell.execute_reply.started":"2025-09-16T20:03:24.340109Z","shell.execute_reply":"2025-09-16T20:03:24.353051Z"}},"outputs":[{"execution_count":28,"output_type":"execute_result","data":{"text/plain":"     SepalWidthCm  PetalLengthCm  Species\n109           3.6            6.1        2\n95            3.0            4.2        1\n61            3.0            4.2        1\n111           2.7            5.3        2\n77            3.0            5.0        1\n82            2.7            3.9        1\n143           3.2            5.9        2\n136           3.4            5.6        2\n133           2.8            5.1        2\n108           2.5            5.8        2","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>SepalWidthCm</th>\n      <th>PetalLengthCm</th>\n      <th>Species</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>109</th>\n      <td>3.6</td>\n      <td>6.1</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>95</th>\n      <td>3.0</td>\n      <td>4.2</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>61</th>\n      <td>3.0</td>\n      <td>4.2</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>111</th>\n      <td>2.7</td>\n      <td>5.3</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>77</th>\n      <td>3.0</td>\n      <td>5.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>82</th>\n      <td>2.7</td>\n      <td>3.9</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>143</th>\n      <td>3.2</td>\n      <td>5.9</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>136</th>\n      <td>3.4</td>\n      <td>5.6</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>133</th>\n      <td>2.8</td>\n      <td>5.1</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>108</th>\n      <td>2.5</td>\n      <td>5.8</td>\n      <td>2</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":28},{"cell_type":"code","source":"df_val","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T20:03:40.791612Z","iopub.execute_input":"2025-09-16T20:03:40.791983Z","iopub.status.idle":"2025-09-16T20:03:40.801497Z","shell.execute_reply.started":"2025-09-16T20:03:40.791958Z","shell.execute_reply":"2025-09-16T20:03:40.800301Z"}},"outputs":[{"execution_count":29,"output_type":"execute_result","data":{"text/plain":"     SepalWidthCm  PetalLengthCm  Species\n120           3.2            5.7        2\n132           2.8            5.6        2\n78            2.9            4.5        1\n60            2.0            3.5        1\n65            3.1            4.4        1","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>SepalWidthCm</th>\n      <th>PetalLengthCm</th>\n      <th>Species</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>120</th>\n      <td>3.2</td>\n      <td>5.7</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>132</th>\n      <td>2.8</td>\n      <td>5.6</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>78</th>\n      <td>2.9</td>\n      <td>4.5</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>60</th>\n      <td>2.0</td>\n      <td>3.5</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>65</th>\n      <td>3.1</td>\n      <td>4.4</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":29},{"cell_type":"code","source":"df_test","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T20:03:54.308434Z","iopub.execute_input":"2025-09-16T20:03:54.308797Z","iopub.status.idle":"2025-09-16T20:03:54.324587Z","shell.execute_reply.started":"2025-09-16T20:03:54.30877Z","shell.execute_reply":"2025-09-16T20:03:54.323436Z"}},"outputs":[{"execution_count":30,"output_type":"execute_result","data":{"text/plain":"     SepalWidthCm  PetalLengthCm  Species\n131           3.8            6.4        2\n125           3.2            6.0        2\n98            2.5            3.0        1\n92            2.6            4.0        1\n91            3.0            4.6        1","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>SepalWidthCm</th>\n      <th>PetalLengthCm</th>\n      <th>Species</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>131</th>\n      <td>3.8</td>\n      <td>6.4</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>125</th>\n      <td>3.2</td>\n      <td>6.0</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>98</th>\n      <td>2.5</td>\n      <td>3.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>92</th>\n      <td>2.6</td>\n      <td>4.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>91</th>\n      <td>3.0</td>\n      <td>4.6</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":30},{"cell_type":"code","source":"X_test = df_val.iloc[:,0:2].values\ny_test = df_val.iloc[:,-1].values","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T20:04:18.200067Z","iopub.execute_input":"2025-09-16T20:04:18.200443Z","iopub.status.idle":"2025-09-16T20:04:18.206752Z","shell.execute_reply.started":"2025-09-16T20:04:18.200412Z","shell.execute_reply":"2025-09-16T20:04:18.20556Z"}},"outputs":[],"execution_count":31},{"cell_type":"code","source":"y_test","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T20:04:36.496787Z","iopub.execute_input":"2025-09-16T20:04:36.497083Z","iopub.status.idle":"2025-09-16T20:04:36.504023Z","shell.execute_reply.started":"2025-09-16T20:04:36.497062Z","shell.execute_reply":"2025-09-16T20:04:36.50279Z"}},"outputs":[{"execution_count":32,"output_type":"execute_result","data":{"text/plain":"array([2, 2, 1, 1, 1])"},"metadata":{}}],"execution_count":32},{"cell_type":"code","source":"# Data for Tree 1\ndf_bag = df_train.sample(8,replace=True)\n\nX = df_bag.iloc[:,0:2]\ny = df_bag.iloc[:,-1]\n\ndf_bag","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T20:04:56.046877Z","iopub.execute_input":"2025-09-16T20:04:56.047192Z","iopub.status.idle":"2025-09-16T20:04:56.059856Z","shell.execute_reply.started":"2025-09-16T20:04:56.047169Z","shell.execute_reply":"2025-09-16T20:04:56.058912Z"}},"outputs":[{"execution_count":33,"output_type":"execute_result","data":{"text/plain":"     SepalWidthCm  PetalLengthCm  Species\n61            3.0            4.2        1\n143           3.2            5.9        2\n111           2.7            5.3        2\n143           3.2            5.9        2\n95            3.0            4.2        1\n111           2.7            5.3        2\n95            3.0            4.2        1\n108           2.5            5.8        2","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>SepalWidthCm</th>\n      <th>PetalLengthCm</th>\n      <th>Species</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>61</th>\n      <td>3.0</td>\n      <td>4.2</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>143</th>\n      <td>3.2</td>\n      <td>5.9</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>111</th>\n      <td>2.7</td>\n      <td>5.3</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>143</th>\n      <td>3.2</td>\n      <td>5.9</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>95</th>\n      <td>3.0</td>\n      <td>4.2</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>111</th>\n      <td>2.7</td>\n      <td>5.3</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>95</th>\n      <td>3.0</td>\n      <td>4.2</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>108</th>\n      <td>2.5</td>\n      <td>5.8</td>\n      <td>2</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":33},{"cell_type":"code","source":"from sklearn.tree import DecisionTreeClassifier\nfrom sklearn.tree import plot_tree\nfrom mlxtend.plotting import plot_decision_regions\nfrom sklearn.metrics import accuracy_score","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T20:05:13.610048Z","iopub.execute_input":"2025-09-16T20:05:13.610421Z","iopub.status.idle":"2025-09-16T20:05:14.260074Z","shell.execute_reply.started":"2025-09-16T20:05:13.610389Z","shell.execute_reply":"2025-09-16T20:05:14.25917Z"}},"outputs":[],"execution_count":34},{"cell_type":"code","source":"dt_bag1 = DecisionTreeClassifier()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T20:05:34.628929Z","iopub.execute_input":"2025-09-16T20:05:34.630176Z","iopub.status.idle":"2025-09-16T20:05:34.634307Z","shell.execute_reply.started":"2025-09-16T20:05:34.630138Z","shell.execute_reply":"2025-09-16T20:05:34.633323Z"}},"outputs":[],"execution_count":36},{"cell_type":"code","source":"def evaluate(clf,X,y):\n    clf.fit(X,y)\n    plot_tree(clf)\n    plt.show()\n    plot_decision_regions(X.values, y.values, clf=clf, legend=2)\n    y_pred = clf.predict(X_test)\n    print(accuracy_score(y_test,y_pred))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T20:15:15.671761Z","iopub.execute_input":"2025-09-16T20:15:15.672071Z","iopub.status.idle":"2025-09-16T20:15:15.677073Z","shell.execute_reply.started":"2025-09-16T20:15:15.672048Z","shell.execute_reply":"2025-09-16T20:15:15.676082Z"}},"outputs":[],"execution_count":38},{"cell_type":"code","source":"evaluate(dt_bag1,X,y)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T20:16:27.165276Z","iopub.execute_input":"2025-09-16T20:16:27.165689Z","iopub.status.idle":"2025-09-16T20:16:27.741832Z","shell.execute_reply.started":"2025-09-16T20:16:27.165664Z","shell.execute_reply":"2025-09-16T20:16:27.740713Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}},{"name":"stderr","text":"/usr/local/lib/python3.11/dist-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names\n  warnings.warn(\n/usr/local/lib/python3.11/dist-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names\n  warnings.warn(\n","output_type":"stream"},{"name":"stdout","text":"1.0\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":39},{"cell_type":"code","source":"df_bag = df_train.sample(8,replace=True)\n\n# Fetch X and y\nX = df_bag.iloc[:,0:2]\ny = df_bag.iloc[:,-1]\n\n# print df_bag\ndf_bag","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T20:16:46.124484Z","iopub.execute_input":"2025-09-16T20:16:46.125483Z","iopub.status.idle":"2025-09-16T20:16:46.138163Z","shell.execute_reply.started":"2025-09-16T20:16:46.125451Z","shell.execute_reply":"2025-09-16T20:16:46.137154Z"}},"outputs":[{"execution_count":40,"output_type":"execute_result","data":{"text/plain":"     SepalWidthCm  PetalLengthCm  Species\n111           2.7            5.3        2\n143           3.2            5.9        2\n82            2.7            3.9        1\n109           3.6            6.1        2\n136           3.4            5.6        2\n108           2.5            5.8        2\n143           3.2            5.9        2\n143           3.2            5.9        2","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>SepalWidthCm</th>\n      <th>PetalLengthCm</th>\n      <th>Species</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>111</th>\n      <td>2.7</td>\n      <td>5.3</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>143</th>\n      <td>3.2</td>\n      <td>5.9</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>82</th>\n      <td>2.7</td>\n      <td>3.9</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>109</th>\n      <td>3.6</td>\n      <td>6.1</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>136</th>\n      <td>3.4</td>\n      <td>5.6</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>108</th>\n      <td>2.5</td>\n      <td>5.8</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>143</th>\n      <td>3.2</td>\n      <td>5.9</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>143</th>\n      <td>3.2</td>\n      <td>5.9</td>\n      <td>2</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":40},{"cell_type":"code","source":"dt_bag2 = DecisionTreeClassifier()\nevaluate(dt_bag2,X,y)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T20:17:00.890211Z","iopub.execute_input":"2025-09-16T20:17:00.89058Z","iopub.status.idle":"2025-09-16T20:17:01.33951Z","shell.execute_reply.started":"2025-09-16T20:17:00.89049Z","shell.execute_reply":"2025-09-16T20:17:01.33854Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}},{"name":"stderr","text":"/usr/local/lib/python3.11/dist-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names\n  warnings.warn(\n/usr/local/lib/python3.11/dist-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names\n  warnings.warn(\n","output_type":"stream"},{"name":"stdout","text":"1.0\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":41},{"cell_type":"code","source":"# Data for Tree 1\ndf_bag = df_train.sample(8,replace=True)\n\n# Fetch X and y\nX = df_bag.iloc[:,0:2]\ny = df_bag.iloc[:,-1]\n\n# print df_bag\ndf_bag","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T20:17:51.94335Z","iopub.execute_input":"2025-09-16T20:17:51.943726Z","iopub.status.idle":"2025-09-16T20:17:51.956194Z","shell.execute_reply.started":"2025-09-16T20:17:51.943699Z","shell.execute_reply":"2025-09-16T20:17:51.955071Z"}},"outputs":[{"execution_count":42,"output_type":"execute_result","data":{"text/plain":"     SepalWidthCm  PetalLengthCm  Species\n136           3.4            5.6        2\n82            2.7            3.9        1\n108           2.5            5.8        2\n108           2.5            5.8        2\n61            3.0            4.2        1\n82            2.7            3.9        1\n111           2.7            5.3        2\n82            2.7            3.9        1","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>SepalWidthCm</th>\n      <th>PetalLengthCm</th>\n      <th>Species</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>136</th>\n      <td>3.4</td>\n      <td>5.6</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>82</th>\n      <td>2.7</td>\n      <td>3.9</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>108</th>\n      <td>2.5</td>\n      <td>5.8</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>108</th>\n      <td>2.5</td>\n      <td>5.8</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>61</th>\n      <td>3.0</td>\n      <td>4.2</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>82</th>\n      <td>2.7</td>\n      <td>3.9</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>111</th>\n      <td>2.7</td>\n      <td>5.3</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>82</th>\n      <td>2.7</td>\n      <td>3.9</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":42},{"cell_type":"code","source":"dt_bag3 = DecisionTreeClassifier()\nevaluate(dt_bag3,X,y)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T20:18:06.332139Z","iopub.execute_input":"2025-09-16T20:18:06.332448Z","iopub.status.idle":"2025-09-16T20:18:06.795114Z","shell.execute_reply.started":"2025-09-16T20:18:06.332425Z","shell.execute_reply":"2025-09-16T20:18:06.794087Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}},{"name":"stderr","text":"/usr/local/lib/python3.11/dist-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names\n  warnings.warn(\n/usr/local/lib/python3.11/dist-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names\n  warnings.warn(\n","output_type":"stream"},{"name":"stdout","text":"1.0\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":43},{"cell_type":"code","source":"df_test","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T20:19:01.114361Z","iopub.execute_input":"2025-09-16T20:19:01.114725Z","iopub.status.idle":"2025-09-16T20:19:01.124596Z","shell.execute_reply.started":"2025-09-16T20:19:01.114693Z","shell.execute_reply":"2025-09-16T20:19:01.12361Z"}},"outputs":[{"execution_count":44,"output_type":"execute_result","data":{"text/plain":"     SepalWidthCm  PetalLengthCm  Species\n131           3.8            6.4        2\n125           3.2            6.0        2\n98            2.5            3.0        1\n92            2.6            4.0        1\n91            3.0            4.6        1","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>SepalWidthCm</th>\n      <th>PetalLengthCm</th>\n      <th>Species</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>131</th>\n      <td>3.8</td>\n      <td>6.4</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>125</th>\n      <td>3.2</td>\n      <td>6.0</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>98</th>\n      <td>2.5</td>\n      <td>3.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>92</th>\n      <td>2.6</td>\n      <td>4.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>91</th>\n      <td>3.0</td>\n      <td>4.6</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":44},{"cell_type":"code","source":"print(\"Predictor 1\",dt_bag1.predict(np.array([2.2,5.0]).reshape(1,2)))\nprint(\"Predictor 2\",dt_bag2.predict(np.array([2.2,5.0]).reshape(1,2)))\nprint(\"Predictor 3\",dt_bag3.predict(np.array([2.2,5.0]).reshape(1,2)))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T20:19:15.549241Z","iopub.execute_input":"2025-09-16T20:19:15.549702Z","iopub.status.idle":"2025-09-16T20:19:15.558663Z","shell.execute_reply.started":"2025-09-16T20:19:15.549676Z","shell.execute_reply":"2025-09-16T20:19:15.557455Z"}},"outputs":[{"name":"stdout","text":"Predictor 1 [2]\nPredictor 2 [2]\nPredictor 3 [2]\n","output_type":"stream"},{"name":"stderr","text":"/usr/local/lib/python3.11/dist-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names\n  warnings.warn(\n/usr/local/lib/python3.11/dist-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names\n  warnings.warn(\n/usr/local/lib/python3.11/dist-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names\n  warnings.warn(\n","output_type":"stream"}],"execution_count":45},{"cell_type":"code","source":"# Row sampling without replacement\ndf_train","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T20:19:32.295657Z","iopub.execute_input":"2025-09-16T20:19:32.295988Z","iopub.status.idle":"2025-09-16T20:19:32.307563Z","shell.execute_reply.started":"2025-09-16T20:19:32.295962Z","shell.execute_reply":"2025-09-16T20:19:32.306668Z"}},"outputs":[{"execution_count":46,"output_type":"execute_result","data":{"text/plain":"     SepalWidthCm  PetalLengthCm  Species\n109           3.6            6.1        2\n95            3.0            4.2        1\n61            3.0            4.2        1\n111           2.7            5.3        2\n77            3.0            5.0        1\n82            2.7            3.9        1\n143           3.2            5.9        2\n136           3.4            5.6        2\n133           2.8            5.1        2\n108           2.5            5.8        2","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>SepalWidthCm</th>\n      <th>PetalLengthCm</th>\n      <th>Species</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>109</th>\n      <td>3.6</td>\n      <td>6.1</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>95</th>\n      <td>3.0</td>\n      <td>4.2</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>61</th>\n      <td>3.0</td>\n      <td>4.2</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>111</th>\n      <td>2.7</td>\n      <td>5.3</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>77</th>\n      <td>3.0</td>\n      <td>5.0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>82</th>\n      <td>2.7</td>\n      <td>3.9</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>143</th>\n      <td>3.2</td>\n      <td>5.9</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>136</th>\n      <td>3.4</td>\n      <td>5.6</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>133</th>\n      <td>2.8</td>\n      <td>5.1</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>108</th>\n      <td>2.5</td>\n      <td>5.8</td>\n      <td>2</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":46},{"cell_type":"code","source":"df_train.sample(8)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T20:19:50.566478Z","iopub.execute_input":"2025-09-16T20:19:50.566826Z","iopub.status.idle":"2025-09-16T20:19:50.578727Z","shell.execute_reply.started":"2025-09-16T20:19:50.566802Z","shell.execute_reply":"2025-09-16T20:19:50.577547Z"}},"outputs":[{"execution_count":47,"output_type":"execute_result","data":{"text/plain":"     SepalWidthCm  PetalLengthCm  Species\n61            3.0            4.2        1\n111           2.7            5.3        2\n108           2.5            5.8        2\n133           2.8            5.1        2\n143           3.2            5.9        2\n95            3.0            4.2        1\n109           3.6            6.1        2\n136           3.4            5.6        2","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>SepalWidthCm</th>\n      <th>PetalLengthCm</th>\n      <th>Species</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>61</th>\n      <td>3.0</td>\n      <td>4.2</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>111</th>\n      <td>2.7</td>\n      <td>5.3</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>108</th>\n      <td>2.5</td>\n      <td>5.8</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>133</th>\n      <td>2.8</td>\n      <td>5.1</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>143</th>\n      <td>3.2</td>\n      <td>5.9</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>95</th>\n      <td>3.0</td>\n      <td>4.2</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>109</th>\n      <td>3.6</td>\n      <td>6.1</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>136</th>\n      <td>3.4</td>\n      <td>5.6</td>\n      <td>2</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":47},{"cell_type":"code","source":"df1 = pd.read_csv('/kaggle/input/iris/Iris.csv')\ndf1 = df1.sample(10)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T20:20:11.075693Z","iopub.execute_input":"2025-09-16T20:20:11.076041Z","iopub.status.idle":"2025-09-16T20:20:11.086096Z","shell.execute_reply.started":"2025-09-16T20:20:11.076001Z","shell.execute_reply":"2025-09-16T20:20:11.084473Z"}},"outputs":[],"execution_count":50},{"cell_type":"code","source":"df1","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T20:20:22.682299Z","iopub.execute_input":"2025-09-16T20:20:22.682725Z","iopub.status.idle":"2025-09-16T20:20:22.699056Z","shell.execute_reply.started":"2025-09-16T20:20:22.682608Z","shell.execute_reply":"2025-09-16T20:20:22.69721Z"}},"outputs":[{"execution_count":51,"output_type":"execute_result","data":{"text/plain":"      Id  SepalLengthCm  SepalWidthCm  PetalLengthCm  PetalWidthCm  \\\n92    93            5.8           2.6            4.0           1.2   \n46    47            5.1           3.8            1.6           0.2   \n60    61            5.0           2.0            3.5           1.0   \n122  123            7.7           2.8            6.7           2.0   \n63    64            6.1           2.9            4.7           1.4   \n28    29            5.2           3.4            1.4           0.2   \n36    37            5.5           3.5            1.3           0.2   \n43    44            5.0           3.5            1.6           0.6   \n111  112            6.4           2.7            5.3           1.9   \n25    26            5.0           3.0            1.6           0.2   \n\n             Species  \n92   Iris-versicolor  \n46       Iris-setosa  \n60   Iris-versicolor  \n122   Iris-virginica  \n63   Iris-versicolor  \n28       Iris-setosa  \n36       Iris-setosa  \n43       Iris-setosa  \n111   Iris-virginica  \n25       Iris-setosa  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>SepalLengthCm</th>\n      <th>SepalWidthCm</th>\n      <th>PetalLengthCm</th>\n      <th>PetalWidthCm</th>\n      <th>Species</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>92</th>\n      <td>93</td>\n      <td>5.8</td>\n      <td>2.6</td>\n      <td>4.0</td>\n      <td>1.2</td>\n      <td>Iris-versicolor</td>\n    </tr>\n    <tr>\n      <th>46</th>\n      <td>47</td>\n      <td>5.1</td>\n      <td>3.8</td>\n      <td>1.6</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>60</th>\n      <td>61</td>\n      <td>5.0</td>\n      <td>2.0</td>\n      <td>3.5</td>\n      <td>1.0</td>\n      <td>Iris-versicolor</td>\n    </tr>\n    <tr>\n      <th>122</th>\n      <td>123</td>\n      <td>7.7</td>\n      <td>2.8</td>\n      <td>6.7</td>\n      <td>2.0</td>\n      <td>Iris-virginica</td>\n    </tr>\n    <tr>\n      <th>63</th>\n      <td>64</td>\n      <td>6.1</td>\n      <td>2.9</td>\n      <td>4.7</td>\n      <td>1.4</td>\n      <td>Iris-versicolor</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>29</td>\n      <td>5.2</td>\n      <td>3.4</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>36</th>\n      <td>37</td>\n      <td>5.5</td>\n      <td>3.5</td>\n      <td>1.3</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>43</th>\n      <td>44</td>\n      <td>5.0</td>\n      <td>3.5</td>\n      <td>1.6</td>\n      <td>0.6</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>111</th>\n      <td>112</td>\n      <td>6.4</td>\n      <td>2.7</td>\n      <td>5.3</td>\n      <td>1.9</td>\n      <td>Iris-virginica</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>26</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>1.6</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":51},{"cell_type":"code","source":"df1.sample(2,replace=True,axis=1)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T20:21:55.420478Z","iopub.execute_input":"2025-09-16T20:21:55.420932Z","iopub.status.idle":"2025-09-16T20:21:55.434106Z","shell.execute_reply.started":"2025-09-16T20:21:55.420902Z","shell.execute_reply":"2025-09-16T20:21:55.432853Z"}},"outputs":[{"execution_count":62,"output_type":"execute_result","data":{"text/plain":"     PetalWidthCm  PetalLengthCm\n92            1.2            4.0\n46            0.2            1.6\n60            1.0            3.5\n122           2.0            6.7\n63            1.4            4.7\n28            0.2            1.4\n36            0.2            1.3\n43            0.6            1.6\n111           1.9            5.3\n25            0.2            1.6","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PetalWidthCm</th>\n      <th>PetalLengthCm</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>92</th>\n      <td>1.2</td>\n      <td>4.0</td>\n    </tr>\n    <tr>\n      <th>46</th>\n      <td>0.2</td>\n      <td>1.6</td>\n    </tr>\n    <tr>\n      <th>60</th>\n      <td>1.0</td>\n      <td>3.5</td>\n    </tr>\n    <tr>\n      <th>122</th>\n      <td>2.0</td>\n      <td>6.7</td>\n    </tr>\n    <tr>\n      <th>63</th>\n      <td>1.4</td>\n      <td>4.7</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>0.2</td>\n      <td>1.4</td>\n    </tr>\n    <tr>\n      <th>36</th>\n      <td>0.2</td>\n      <td>1.3</td>\n    </tr>\n    <tr>\n      <th>43</th>\n      <td>0.6</td>\n      <td>1.6</td>\n    </tr>\n    <tr>\n      <th>111</th>\n      <td>1.9</td>\n      <td>5.3</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>0.2</td>\n      <td>1.6</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":62},{"cell_type":"code","source":"df1","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T20:22:09.052724Z","iopub.execute_input":"2025-09-16T20:22:09.053005Z","iopub.status.idle":"2025-09-16T20:22:09.065905Z","shell.execute_reply.started":"2025-09-16T20:22:09.052984Z","shell.execute_reply":"2025-09-16T20:22:09.064697Z"}},"outputs":[{"execution_count":63,"output_type":"execute_result","data":{"text/plain":"      Id  SepalLengthCm  SepalWidthCm  PetalLengthCm  PetalWidthCm  \\\n92    93            5.8           2.6            4.0           1.2   \n46    47            5.1           3.8            1.6           0.2   \n60    61            5.0           2.0            3.5           1.0   \n122  123            7.7           2.8            6.7           2.0   \n63    64            6.1           2.9            4.7           1.4   \n28    29            5.2           3.4            1.4           0.2   \n36    37            5.5           3.5            1.3           0.2   \n43    44            5.0           3.5            1.6           0.6   \n111  112            6.4           2.7            5.3           1.9   \n25    26            5.0           3.0            1.6           0.2   \n\n             Species  \n92   Iris-versicolor  \n46       Iris-setosa  \n60   Iris-versicolor  \n122   Iris-virginica  \n63   Iris-versicolor  \n28       Iris-setosa  \n36       Iris-setosa  \n43       Iris-setosa  \n111   Iris-virginica  \n25       Iris-setosa  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>SepalLengthCm</th>\n      <th>SepalWidthCm</th>\n      <th>PetalLengthCm</th>\n      <th>PetalWidthCm</th>\n      <th>Species</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>92</th>\n      <td>93</td>\n      <td>5.8</td>\n      <td>2.6</td>\n      <td>4.0</td>\n      <td>1.2</td>\n      <td>Iris-versicolor</td>\n    </tr>\n    <tr>\n      <th>46</th>\n      <td>47</td>\n      <td>5.1</td>\n      <td>3.8</td>\n      <td>1.6</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>60</th>\n      <td>61</td>\n      <td>5.0</td>\n      <td>2.0</td>\n      <td>3.5</td>\n      <td>1.0</td>\n      <td>Iris-versicolor</td>\n    </tr>\n    <tr>\n      <th>122</th>\n      <td>123</td>\n      <td>7.7</td>\n      <td>2.8</td>\n      <td>6.7</td>\n      <td>2.0</td>\n      <td>Iris-virginica</td>\n    </tr>\n    <tr>\n      <th>63</th>\n      <td>64</td>\n      <td>6.1</td>\n      <td>2.9</td>\n      <td>4.7</td>\n      <td>1.4</td>\n      <td>Iris-versicolor</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>29</td>\n      <td>5.2</td>\n      <td>3.4</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>36</th>\n      <td>37</td>\n      <td>5.5</td>\n      <td>3.5</td>\n      <td>1.3</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>43</th>\n      <td>44</td>\n      <td>5.0</td>\n      <td>3.5</td>\n      <td>1.6</td>\n      <td>0.6</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>111</th>\n      <td>112</td>\n      <td>6.4</td>\n      <td>2.7</td>\n      <td>5.3</td>\n      <td>1.9</td>\n      <td>Iris-virginica</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>26</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>1.6</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":63},{"cell_type":"code","source":"df1.sample(8,replace=True).sample(2,replace=True,axis=1)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-16T20:22:22.080722Z","iopub.execute_input":"2025-09-16T20:22:22.081016Z","iopub.status.idle":"2025-09-16T20:22:22.092064Z","shell.execute_reply.started":"2025-09-16T20:22:22.080996Z","shell.execute_reply":"2025-09-16T20:22:22.091055Z"}},"outputs":[{"execution_count":64,"output_type":"execute_result","data":{"text/plain":"             Species   Id\n60   Iris-versicolor   61\n43       Iris-setosa   44\n43       Iris-setosa   44\n122   Iris-virginica  123\n43       Iris-setosa   44\n43       Iris-setosa   44\n43       Iris-setosa   44\n36       Iris-setosa   37","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Species</th>\n      <th>Id</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>60</th>\n      <td>Iris-versicolor</td>\n      <td>61</td>\n    </tr>\n    <tr>\n      <th>43</th>\n      <td>Iris-setosa</td>\n      <td>44</td>\n    </tr>\n    <tr>\n      <th>43</th>\n      <td>Iris-setosa</td>\n      <td>44</td>\n    </tr>\n    <tr>\n      <th>122</th>\n      <td>Iris-virginica</td>\n      <td>123</td>\n    </tr>\n    <tr>\n      <th>43</th>\n      <td>Iris-setosa</td>\n      <td>44</td>\n    </tr>\n    <tr>\n      <th>43</th>\n      <td>Iris-setosa</td>\n      <td>44</td>\n    </tr>\n    <tr>\n      <th>43</th>\n      <td>Iris-setosa</td>\n      <td>44</td>\n    </tr>\n    <tr>\n      <th>36</th>\n      <td>Iris-setosa</td>\n      <td>37</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":64}]}